*Open the current model file to get the list of accounts and their zip codes.
GET FILE = '/usr/spss/userdata/model_files/201604_Apr_merged_model_file.sav'
   /KEEP account CUSTSTAT ZIPCODE market_segment.
CACHE.
EXE.

DATASET NAME ACCTS.

*Open the current time series file to get the sales through February.
GET FILE = '/usr/spss/userdata/time_series_data/NEW_Sales_by_account_1993_0416.sav'
   /KEEP account SLS_0311 TO SLS_0416.
CACHE.
EXE.

DATASET NAME TS.

DATASET ACTIVATE ACCTS.

SELECT IF(CUSTSTAT = 'A').
EXE.

MATCH FILES
   /FILE = *
   /TABLE = 'TS'
   /BY account.
EXE.

DATASET CLOSE TS.
DATASET ACTIVATE ACCTS.

*Open the model file from April 2013 to get the 24 months of transactions prior to May 2013.
GET FILE = '/usr/spss/userdata/model_files/201304_Apr_merged_model_file.sav'
   /KEEP account TRANS24 TRANS23 TRANS22 TRANS21 TRANS20 TRANS19 TRANS18 TRANS17 TRANS16 TRANS15 TRANS14 TRANS13 TRANS12 TRANS11 TRANS10 
              TRANS09 TRANS08 TRANS07 TRANS06 TRANS05 TRANS04 TRANS03 TRANS02 TRANS01
   /RENAME TRANS24 = TRNS_0511 TRANS23 = TRNS_0611 TRANS22 = TRNS_0711 TRANS21 = TRNS_0811 TRANS20 = TRNS_0911 TRANS19 = TRNS_1011
                   TRANS18 = TRNS_1111 TRANS17 = TRNS_1211 TRANS16 = TRNS_0112 TRANS15 = TRNS_0212 TRANS14 = TRNS_0312 TRANS13 = TRNS_0412
                   TRANS12 = TRNS_0512 TRANS11 = TRNS_0612 TRANS10 = TRNS_0712 TRANS09 = TRNS_0812 TRANS08 = TRNS_0912 TRANS07 = TRNS_1012
                   TRANS06 = TRNS_1112 TRANS05 = TRNS_1212 TRANS04 = TRNS_0113 TRANS03 = TRNS_0213 TRANS02 = TRNS_0313 TRANS01 = TRNS_0413.
CACHE.
EXE.

DATASET NAME TRANS1.

*Open the current model file to get the list of accounts and their zip codes.
GET FILE = '/usr/spss/userdata/model_files/201604_Apr_merged_model_file.sav'
   /KEEP account TRANS36 TRANS35 TRANS34 TRANS33 TRANS32 TRANS31 TRANS30 TRANS29 TRANS28 TRANS27 TRANS26 TRANS25
              TRANS24 TRANS23 TRANS22 TRANS21 TRANS20 TRANS19 TRANS18 TRANS17 TRANS16 TRANS15 TRANS14 TRANS13 TRANS12 TRANS11 TRANS10 
              TRANS09 TRANS08 TRANS07 TRANS06 TRANS05 TRANS04 TRANS03 TRANS02 TRANS01
   /RENAME TRANS36 = TRNS_0513 TRANS35 = TRNS_0613 TRANS34 = TRNS_0713 TRANS33 = TRNS_0813 TRANS32 = TRNS_0913 TRANS31 = TRNS_1013
                   TRANS30 = TRNS_1113 TRANS29 = TRNS_1213 TRANS28 = TRNS_0114 TRANS27 = TRNS_0214 TRANS26 = TRNS_0314 TRANS25 = TRNS_0414 
                   TRANS24 = TRNS_0514 TRANS23 = TRNS_0614 TRANS22 = TRNS_0714 TRANS21 = TRNS_0814 TRANS20 = TRNS_0914 TRANS19 = TRNS_1014
                   TRANS18 = TRNS_1114 TRANS17 = TRNS_1214 TRANS16 = TRNS_0115 TRANS15 = TRNS_0215 TRANS14 = TRNS_0315 TRANS13 = TRNS_0415
                   TRANS12 = TRNS_0515 TRANS11 = TRNS_0615 TRANS10 = TRNS_0715 TRANS09 = TRNS_0815 TRANS08 = TRNS_0915 TRANS07 = TRNS_1015
                   TRANS06 = TRNS_1115 TRANS05 = TRNS_1215 TRANS04 = TRNS_0116 TRANS03 = TRNS_0216 TRANS02 = TRNS_0316 TRANS01 = TRNS_0416.
CACHE.
EXE.

DATASET NAME TRANS2.

DATASET ACTIVATE ACCTS.

MATCH FILES
   /FILE = *
   /TABLE = 'TRANS1'
   /TABLE = 'TRANS2'
   /BY account.
EXE.

DATASET CLOSE TRANS1.
DATASET CLOSE TRANS2.

DATASET ACTIVATE ACCTS.

*Open the ecomm ops file from Dec 2013 to get Gcom sales history.
GET FILE = '/usr/spss/userdata/ecomm_files/gz/201312.ecomm.ops.sav'
   /KEEP Account gcom_sales_0511 TO gcom_sales_1213.
CACHE.
EXE.

DATASET NAME GC1.

*Open the ecomm ops file from Apr 2016 to get Gcom sales history.
GET FILE = '/usr/spss/userdata/ecomm_files/201604.ecomm.ops.sav'
   /KEEP Account Gcom_Sales_0114 TO Gcom_Sales_0416. 
CACHE.
EXE.

DATASET NAME GC2.

*Open the ecomm ops file from Dec 2012 to get Gcom order history.
GET FILE = '/usr/spss/userdata/ecomm_files/gz/201412.ecomm.ops.sav'
   /KEEP Account Gcom_Orders_0112 TO Gcom_Orders_1214.
CACHE.
EXE.

DATASET NAME GC3.

*Open the ecomm ops file from Feb 2016 to get Gcom order history.
GET FILE = '/usr/spss/userdata/ecomm_files/201604.ecomm.ops.sav'
   /KEEP Account Gcom_Orders_0115 TO Gcom_Orders_0416. 
CACHE.
EXE.

DATASET NAME GC4.

DATASET ACTIVATE ACCTS.

MATCH FILES
   /FILE = *
   /TABLE = 'GC1'
   /TABLE = 'GC2'
   /TABLE = 'GC3'
   /TABLE = 'GC4'
   /BY account.
EXE.

DATASET CLOSE GC1.
DATASET CLOSE GC2.
DATASET CLOSE GC3.
DATASET CLOSE GC4.

DATASET ACTIVATE ACCTS.

*Open the sales days files to standardize sales for the number of sales days.
GET FILE = '/usr/spss/userdata/sales_days/2014-12-03 sales days thru 2022.sav'.
CACHE.
EXE.

DATASET NAME SD.
DATASET ACTIVATE SD.

*Select only the date range we need.
SELECT IF(month >= 201105 AND month <= 201604).
EXE.

*Transpose the records.
FLIP VARIABLES=slsdays
  /NEWNAMES=month.

DATASET NAME SALES_DAYS.
DATASET CLOSE SD.
DATASET ACTIVATE ACCTS.

STRING CASE_LBL(A7).

COMPUTE CASE_LBL = 'slsdays'.
EXE.

MATCH FILES
   /FILE = *
   /TABLE = 'SALES_DAYS'
   /BY CASE_LBL.
EXE.

DATASET CLOSE SALES_DAYS.
DATASET ACTIVATE ACCTS.

DELETE VARIABLES CASE_LBL.

VECTOR MS = SLS_0511 TO SLS_0416.
VECTOR MT = TRNS_0511 TO TRNS_0416.
VECTOR GCS = gcom_sales_0511 TO Gcom_Sales_0416.
VECTOR SD = K_201105 TO K_201604.

VECTOR ADS(60).
VECTOR ADT(60).
VECTOR ADGCS(60).

LOOP #i = 1 TO 60.

   DO IF(SD(#i) > 0).

      COMPUTE ADS(#i) = MS(#i) / SD(#i).

      COMPUTE ADT(#i) = MT(#i) / SD(#i).

      COMPUTE ADGCS(#i) = GCS(#i) / SD(#i).

   END IF.

END LOOP.

VECTOR GCT = Gcom_Orders_0112 TO Gcom_Orders_0416.
VECTOR SD2 = K_201201 TO K_201604.

VECTOR ADGCT(60).

LOOP #j = 1 TO 60.

   DO IF(#j < 9).

      COMPUTE ADGCT(#j) = $SYSMIS.

   ELSE IF(#j >= 9 AND SD2(#j - 8) > 0).

      COMPUTE ADGCT(#j) = GCT(#j - 8) / SD2(#j - 8).

   END IF.

END LOOP.
EXE.

*Flag accounts who have sales in at least 1 month in the time period at which we are looking.
VECTOR TOT_SLS = SLS_0511 TO SLS_0416.

COMPUTE Has_Sales = 0.
FORMATS Has_Sales(F1.0).

LOOP #k = 1 TO 60.

   IF(TOT_SLS(#k) > 0) Has_Sales = 1.

END LOOP.
EXE.

FREQ Has_Sales.

DELETE VARIABLES K_201105 TO K_201604.

*Add in the DMA using the zip code of the account.
ALTER TYPE ZIPCODE(A5).

SORT CASES BY ZIPCODE(A).

*Open the file containing the Zipcode to DMA mapping.
GET FILE = '/usr/spss/userdata/LWhately/Media/2015 Media Test/dma_zip_xref_mine.sav'
   /KEEP ZipCode DMA.
CACHE.
EXE.

DATASET NAME DMA.

DATASET ACTIVATE ACCTS.

MATCH FILES
   /FILE = *
   /TABLE = 'DMA'
   /BY ZIPCODE.
EXE.

*Open the DMA metrics file to get the DMA ID.
GET FILE = '/usr/spss/userdata/Albrecht/Display Geo/DMA MDS Metrics.sav'
   /KEEP DMA DMA_ID.
CACHE.
EXE.

DATASET NAME ID.

DATASET ACTIVATE ACCTS.

SORT CASES BY DMA(A).

MATCH FILES
   /FILE = *
   /TABLE = 'ID'
   /BY DMA.
EXE.

DATASET CLOSE ID.
DATASET ACTIVATE ACCTS.

SORT CASES BY account(A).

SAVE OUTFILE = '/usr/spss/userdata/Albrecht/Display Geo/Sales and Transaction History by Account.sav'.

/*LOOK AT THE TOTAL AND DAILY SALES/TRANS TRENDS FOR THE TEST AND CONTROL MARKETS*/.

*Select only accounts with sales history and in the DMAs we have selected for test and control markets.
DATASET COPY TC_ACCTS.
DATASET ACTIVATE TC_ACCTS.

SELECT IF(Has_Sales >= 1 AND ANY(DMA_ID,186,23,119,16,128,73,157,161,20,39,
                                                                       3,206,170,96,188,29,7,184,114,189)).
EXE.

FREQ DMA.

*Create a variable to show which group each DMA falls into.
COMPUTE Group = 0.
IF(ANY(DMA_ID,186,23,119,16,128,73,157,161,20,39)) Group = 1.
IF(ANY(DMA_ID,3,206,170,96,188,29,7,184,114,189)) Group = 2.
VALUE LABELS Group 1 'Test' 2 'Control'.
FORMATS Group(F1.0).
EXE.

FREQ Group.

*Gcom Daily sales.
DATASET DECLARE AGG_GCDS.

AGGREGATE
  /OUTFILE='AGG_GCDS'
  /BREAK=Group
  /ADGCS1=SUM(ADGCS1) 
  /ADGCS2=SUM(ADGCS2) 
  /ADGCS3=SUM(ADGCS3) 
  /ADGCS4=SUM(ADGCS4) 
  /ADGCS5=SUM(ADGCS5) 
  /ADGCS6=SUM(ADGCS6) 
  /ADGCS7=SUM(ADGCS7) 
  /ADGCS8=SUM(ADGCS8) 
  /ADGCS9=SUM(ADGCS9) 
  /ADGCS10=SUM(ADGCS10) 
  /ADGCS11=SUM(ADGCS11) 
  /ADGCS12=SUM(ADGCS12) 
  /ADGCS13=SUM(ADGCS13) 
  /ADGCS14=SUM(ADGCS14) 
  /ADGCS15=SUM(ADGCS15) 
  /ADGCS16=SUM(ADGCS16) 
  /ADGCS17=SUM(ADGCS17) 
  /ADGCS18=SUM(ADGCS18) 
  /ADGCS19=SUM(ADGCS19) 
  /ADGCS20=SUM(ADGCS20) 
  /ADGCS21=SUM(ADGCS21) 
  /ADGCS22=SUM(ADGCS22) 
  /ADGCS23=SUM(ADGCS23) 
  /ADGCS24=SUM(ADGCS24) 
  /ADGCS25=SUM(ADGCS25) 
  /ADGCS26=SUM(ADGCS26) 
  /ADGCS27=SUM(ADGCS27) 
  /ADGCS28=SUM(ADGCS28) 
  /ADGCS29=SUM(ADGCS29) 
  /ADGCS30=SUM(ADGCS30) 
  /ADGCS31=SUM(ADGCS31) 
  /ADGCS32=SUM(ADGCS32) 
  /ADGCS33=SUM(ADGCS33) 
  /ADGCS34=SUM(ADGCS34) 
  /ADGCS35=SUM(ADGCS35) 
  /ADGCS36=SUM(ADGCS36) 
  /ADGCS37=SUM(ADGCS37) 
  /ADGCS38=SUM(ADGCS38) 
  /ADGCS39=SUM(ADGCS39) 
  /ADGCS40=SUM(ADGCS40) 
  /ADGCS41=SUM(ADGCS41) 
  /ADGCS42=SUM(ADGCS42) 
  /ADGCS43=SUM(ADGCS43) 
  /ADGCS44=SUM(ADGCS44) 
  /ADGCS45=SUM(ADGCS45) 
  /ADGCS46=SUM(ADGCS46) 
  /ADGCS47=SUM(ADGCS47) 
  /ADGCS48=SUM(ADGCS48) 
  /ADGCS49=SUM(ADGCS49) 
  /ADGCS50=SUM(ADGCS50) 
  /ADGCS51=SUM(ADGCS51) 
  /ADGCS52=SUM(ADGCS52) 
  /ADGCS53=SUM(ADGCS53) 
  /ADGCS54=SUM(ADGCS54) 
  /ADGCS55=SUM(ADGCS55) 
  /ADGCS56=SUM(ADGCS56) 
  /ADGCS57=SUM(ADGCS57) 
  /ADGCS58=SUM(ADGCS58) 
  /ADGCS59=SUM(ADGCS59) 
  /ADGCS60=SUM(ADGCS60).

DATASET ACTIVATE AGG_GCDS.

COMPUTE ADGCS61 = 0.
COMPUTE ADGCS62 = 0.
COMPUTE ADGCS63 = 0.
COMPUTE ADGCS64 = 0.
COMPUTE ADGCS65 = 0.
COMPUTE ADGCS66 = 0.
COMPUTE ADGCS67 = 0.
COMPUTE ADGCS68 = 0.
COMPUTE ADGCS69 = 0.
COMPUTE ADGCS70 = 0.
COMPUTE ADGCS71 = 0.
COMPUTE ADGCS72 = 0.
EXE.

FLIP VARIABLES=ADGCS1 ADGCS2 ADGCS3 ADGCS4 ADGCS5 ADGCS6 ADGCS7 ADGCS8 ADGCS9 ADGCS10 ADGCS11 ADGCS12 ADGCS13 ADGCS14
                            ADGCS15 ADGCS16 ADGCS17 ADGCS18 ADGCS19 ADGCS20 ADGCS21 ADGCS22 ADGCS23 ADGCS24 ADGCS25 ADGCS26 ADGCS27 
                            ADGCS28 ADGCS29 ADGCS30 ADGCS31 ADGCS32 ADGCS33 ADGCS34 ADGCS35 ADGCS36 ADGCS37 ADGCS38 ADGCS39 ADGCS40 
                            ADGCS41 ADGCS42 ADGCS43 ADGCS44 ADGCS45 ADGCS46 ADGCS47 ADGCS48 ADGCS49 ADGCS50 ADGCS51 ADGCS52 ADGCS53 
                            ADGCS54 ADGCS55 ADGCS56 ADGCS57 ADGCS58 ADGCS59 ADGCS60 ADGCS61 ADGCS62 ADGCS63 ADGCS64 ADGCS65 ADGCS66 
                            ADGCS67 ADGCS68 ADGCS69 ADGCS70 ADGCS71 ADGCS72
  /NEWNAMES=Group.

DATASET NAME DGCS_TS.
DATASET ACTIVATE DGCS_TS.

RENAME VARIABLES K_1 = Test K_2 = Control.

DATE M 5 12 Y 2011.

*Test Forecast.
USE year 2011 month 5 THRU year 2016 month 4.

PREDICT THRU END.

TSMODEL
   /MODELSUMMARY  PRINT=[MODELFIT]
   /MODELSTATISTICS  DISPLAY=YES MODELFIT=[ SRSQUARE RSQUARE]
   /SERIESPLOT OBSERVED FORECAST FORECASTCI
   /OUTPUTFILTER DISPLAY=ALLMODELS
   /SAVE  PREDICTED(Predicted) LCL(LCL) UCL(UCL) NRESIDUAL(NResidual)
   /AUXILIARY  CILEVEL=90 MAXACFLAGS=24
   /MISSING USERMISSING=EXCLUDE
   /MODEL DEPENDENT=Test INDEPENDENT=YEAR_ MONTH_
      PREFIX='Model'
   /EXPERTMODELER TYPE=[ARIMA EXSMOOTH] TRYSEASONAL=YES
   /AUTOOUTLIER  DETECT=OFF.

*Control Forecast.
USE year 2011 month 5 THRU year 2016 month 4.

PREDICT THRU END.

TSMODEL
   /MODELSUMMARY  PRINT=[MODELFIT]
   /MODELSTATISTICS  DISPLAY=YES MODELFIT=[ SRSQUARE RSQUARE]
   /SERIESPLOT OBSERVED FORECAST FORECASTCI
   /OUTPUTFILTER DISPLAY=ALLMODELS
   /SAVE  PREDICTED(Predicted) LCL(LCL) UCL(UCL) NRESIDUAL(NResidual)
   /AUXILIARY  CILEVEL=90 MAXACFLAGS=24
   /MISSING USERMISSING=EXCLUDE
   /MODEL DEPENDENT=Control INDEPENDENT=YEAR_ MONTH_
      PREFIX='Model'
   /EXPERTMODELER TYPE=[ARIMA EXSMOOTH] TRYSEASONAL=YES
   /AUTOOUTLIER  DETECT=OFF.

DATASET CLOSE DGCS_TS.
DATASET CLOSE AGG_GCDS.

*Daily Gcom Orders.
DATASET ACTIVATE TC_ACCTS.

DATASET DECLARE AGG_GCDT.

AGGREGATE
  /OUTFILE='AGG_GCDT'
  /BREAK=Group
  /ADGCT1=SUM(ADGCT1) 
  /ADGCT2=SUM(ADGCT2) 
  /ADGCT3=SUM(ADGCT3) 
  /ADGCT4=SUM(ADGCT4) 
  /ADGCT5=SUM(ADGCT5) 
  /ADGCT6=SUM(ADGCT6) 
  /ADGCT7=SUM(ADGCT7) 
  /ADGCT8=SUM(ADGCT8) 
  /ADGCT9=SUM(ADGCT9) 
  /ADGCT10=SUM(ADGCT10) 
  /ADGCT11=SUM(ADGCT11) 
  /ADGCT12=SUM(ADGCT12) 
  /ADGCT13=SUM(ADGCT13) 
  /ADGCT14=SUM(ADGCT14) 
  /ADGCT15=SUM(ADGCT15) 
  /ADGCT16=SUM(ADGCT16) 
  /ADGCT17=SUM(ADGCT17) 
  /ADGCT18=SUM(ADGCT18) 
  /ADGCT19=SUM(ADGCT19) 
  /ADGCT20=SUM(ADGCT20) 
  /ADGCT21=SUM(ADGCT21) 
  /ADGCT22=SUM(ADGCT22) 
  /ADGCT23=SUM(ADGCT23) 
  /ADGCT24=SUM(ADGCT24) 
  /ADGCT25=SUM(ADGCT25) 
  /ADGCT26=SUM(ADGCT26) 
  /ADGCT27=SUM(ADGCT27) 
  /ADGCT28=SUM(ADGCT28) 
  /ADGCT29=SUM(ADGCT29) 
  /ADGCT30=SUM(ADGCT30) 
  /ADGCT31=SUM(ADGCT31) 
  /ADGCT32=SUM(ADGCT32) 
  /ADGCT33=SUM(ADGCT33) 
  /ADGCT34=SUM(ADGCT34) 
  /ADGCT35=SUM(ADGCT35) 
  /ADGCT36=SUM(ADGCT36) 
  /ADGCT37=SUM(ADGCT37) 
  /ADGCT38=SUM(ADGCT38) 
  /ADGCT39=SUM(ADGCT39) 
  /ADGCT40=SUM(ADGCT40) 
  /ADGCT41=SUM(ADGCT41) 
  /ADGCT42=SUM(ADGCT42) 
  /ADGCT43=SUM(ADGCT43) 
  /ADGCT44=SUM(ADGCT44) 
  /ADGCT45=SUM(ADGCT45) 
  /ADGCT46=SUM(ADGCT46) 
  /ADGCT47=SUM(ADGCT47) 
  /ADGCT48=SUM(ADGCT48) 
  /ADGCT49=SUM(ADGCT49) 
  /ADGCT50=SUM(ADGCT50) 
  /ADGCT51=SUM(ADGCT51) 
  /ADGCT52=SUM(ADGCT52) 
  /ADGCT53=SUM(ADGCT53) 
  /ADGCT54=SUM(ADGCT54) 
  /ADGCT55=SUM(ADGCT55) 
  /ADGCT56=SUM(ADGCT56) 
  /ADGCT57=SUM(ADGCT57) 
  /ADGCT58=SUM(ADGCT58) 
  /ADGCT59=SUM(ADGCT59) 
  /ADGCT60=SUM(ADGCT60).

DATASET ACTIVATE AGG_GCDT.

COMPUTE ADGCT61 = 0.
COMPUTE ADGCT62 = 0.
COMPUTE ADGCT63 = 0.
COMPUTE ADGCT64 = 0.
COMPUTE ADGCT65 = 0.
COMPUTE ADGCT66 = 0.
COMPUTE ADGCT67 = 0.
COMPUTE ADGCT68 = 0.
COMPUTE ADGCT69 = 0.
COMPUTE ADGCT70 = 0.
COMPUTE ADGCT71 = 0.
COMPUTE ADGCT72 = 0.
EXE.

FLIP VARIABLES=ADGCT1 ADGCT2 ADGCT3 ADGCT4 ADGCT5 ADGCT6 ADGCT7 ADGCT8 ADGCT9 ADGCT10 ADGCT11 ADGCT12 ADGCT13 ADGCT14
                            ADGCT15 ADGCT16 ADGCT17 ADGCT18 ADGCT19 ADGCT20 ADGCT21 ADGCT22 ADGCT23 ADGCT24 ADGCT25 ADGCT26 ADGCT27 
                            ADGCT28 ADGCT29 ADGCT30 ADGCT31 ADGCT32 ADGCT33 ADGCT34 ADGCT35 ADGCT36 ADGCT37 ADGCT38 ADGCT39 ADGCT40 
                            ADGCT41 ADGCT42 ADGCT43 ADGCT44 ADGCT45 ADGCT46 ADGCT47 ADGCT48 ADGCT49 ADGCT50 ADGCT51 ADGCT52 ADGCT53 
                            ADGCT54 ADGCT55 ADGCT56 ADGCT57 ADGCT58 ADGCT59 ADGCT60 ADGCT61 ADGCT62 ADGCT63 ADGCT64 ADGCT65 ADGCT66 
                            ADGCT67 ADGCT68 ADGCT69 ADGCT70 ADGCT71 ADGCT72
  /NEWNAMES=Group.

DATASET NAME DGCT_TS.
DATASET ACTIVATE DGCT_TS.

RENAME VARIABLES K_1 = Test K_2 = Control.

DATE M 5 12 Y 2011.

*Test Forecast.
USE year 2012 month 1 THRU year 2016 month 4.

PREDICT THRU END.

TSMODEL
   /MODELSUMMARY  PRINT=[MODELFIT]
   /MODELSTATISTICS  DISPLAY=YES MODELFIT=[ SRSQUARE RSQUARE]
   /SERIESPLOT OBSERVED FORECAST FORECASTCI
   /OUTPUTFILTER DISPLAY=ALLMODELS
   /SAVE  PREDICTED(Predicted) LCL(LCL) UCL(UCL) NRESIDUAL(NResidual)
   /AUXILIARY  CILEVEL=90 MAXACFLAGS=24
   /MISSING USERMISSING=EXCLUDE
   /MODEL DEPENDENT=Test INDEPENDENT=YEAR_ MONTH_
      PREFIX='Model'
   /EXPERTMODELER TYPE=[ARIMA EXSMOOTH] TRYSEASONAL=YES
   /AUTOOUTLIER  DETECT=OFF.

*Control Forecast.
USE year 2012 month 1 THRU year 2016 month 4.

PREDICT THRU END.

TSMODEL
   /MODELSUMMARY  PRINT=[MODELFIT]
   /MODELSTATISTICS  DISPLAY=YES MODELFIT=[ SRSQUARE RSQUARE]
   /SERIESPLOT OBSERVED FORECAST FORECASTCI
   /OUTPUTFILTER DISPLAY=ALLMODELS
   /SAVE  PREDICTED(Predicted) LCL(LCL) UCL(UCL) NRESIDUAL(NResidual)
   /AUXILIARY  CILEVEL=90 MAXACFLAGS=24
   /MISSING USERMISSING=EXCLUDE
   /MODEL DEPENDENT=Control INDEPENDENT=YEAR_ MONTH_
      PREFIX='Model'
   /EXPERTMODELER TYPE=[ARIMA EXSMOOTH] TRYSEASONAL=YES
   /AUTOOUTLIER  DETECT=OFF.

DATASET CLOSE DGCT_TS.
DATASET CLOSE AGG_GCDT.

*Daily sales.
DATASET ACTIVATE TC_ACCTS.

DATASET DECLARE AGG_DS.

AGGREGATE
  /OUTFILE='AGG_DS'
  /BREAK=Group
  /ADS1=SUM(ADS1) 
  /ADS2=SUM(ADS2) 
  /ADS3=SUM(ADS3) 
  /ADS4=SUM(ADS4) 
  /ADS5=SUM(ADS5) 
  /ADS6=SUM(ADS6) 
  /ADS7=SUM(ADS7) 
  /ADS8=SUM(ADS8) 
  /ADS9=SUM(ADS9) 
  /ADS10=SUM(ADS10) 
  /ADS11=SUM(ADS11) 
  /ADS12=SUM(ADS12) 
  /ADS13=SUM(ADS13) 
  /ADS14=SUM(ADS14) 
  /ADS15=SUM(ADS15) 
  /ADS16=SUM(ADS16) 
  /ADS17=SUM(ADS17) 
  /ADS18=SUM(ADS18) 
  /ADS19=SUM(ADS19) 
  /ADS20=SUM(ADS20) 
  /ADS21=SUM(ADS21) 
  /ADS22=SUM(ADS22) 
  /ADS23=SUM(ADS23) 
  /ADS24=SUM(ADS24) 
  /ADS25=SUM(ADS25) 
  /ADS26=SUM(ADS26) 
  /ADS27=SUM(ADS27) 
  /ADS28=SUM(ADS28) 
  /ADS29=SUM(ADS29) 
  /ADS30=SUM(ADS30) 
  /ADS31=SUM(ADS31) 
  /ADS32=SUM(ADS32) 
  /ADS33=SUM(ADS33) 
  /ADS34=SUM(ADS34) 
  /ADS35=SUM(ADS35) 
  /ADS36=SUM(ADS36) 
  /ADS37=SUM(ADS37) 
  /ADS38=SUM(ADS38) 
  /ADS39=SUM(ADS39) 
  /ADS40=SUM(ADS40) 
  /ADS41=SUM(ADS41) 
  /ADS42=SUM(ADS42) 
  /ADS43=SUM(ADS43) 
  /ADS44=SUM(ADS44) 
  /ADS45=SUM(ADS45) 
  /ADS46=SUM(ADS46) 
  /ADS47=SUM(ADS47) 
  /ADS48=SUM(ADS48) 
  /ADS49=SUM(ADS49) 
  /ADS50=SUM(ADS50) 
  /ADS51=SUM(ADS51) 
  /ADS52=SUM(ADS52) 
  /ADS53=SUM(ADS53) 
  /ADS54=SUM(ADS54) 
  /ADS55=SUM(ADS55) 
  /ADS56=SUM(ADS56) 
  /ADS57=SUM(ADS57) 
  /ADS58=SUM(ADS58) 
  /ADS59=SUM(ADS59) 
  /ADS60=SUM(ADS60).

DATASET ACTIVATE AGG_DS.

COMPUTE ADS61 = 0.
COMPUTE ADS62 = 0.
COMPUTE ADS63 = 0.
COMPUTE ADS64 = 0.
COMPUTE ADS65 = 0.
COMPUTE ADS66 = 0.
COMPUTE ADS67 = 0.
COMPUTE ADS68 = 0.
COMPUTE ADS69 = 0.
COMPUTE ADS70 = 0.
COMPUTE ADS71 = 0.
COMPUTE ADS72 = 0.
EXE.

FLIP VARIABLES=ADS1 ADS2 ADS3 ADS4 ADS5 ADS6 ADS7 ADS8 ADS9 ADS10 ADS11 ADS12 ADS13 ADS14
                            ADS15 ADS16 ADS17 ADS18 ADS19 ADS20 ADS21 ADS22 ADS23 ADS24 ADS25 ADS26 ADS27 
                            ADS28 ADS29 ADS30 ADS31 ADS32 ADS33 ADS34 ADS35 ADS36 ADS37 ADS38 ADS39 ADS40 
                            ADS41 ADS42 ADS43 ADS44 ADS45 ADS46 ADS47 ADS48 ADS49 ADS50 ADS51 ADS52 ADS53 
                            ADS54 ADS55 ADS56 ADS57 ADS58 ADS59 ADS60 ADS61 ADS62 ADS63 ADS64 ADS65 ADS66 
                            ADS67 ADS68 ADS69 ADS70 ADS71 ADS72
  /NEWNAMES=Group.

DATASET NAME DS_TS.
DATASET ACTIVATE DS_TS.

RENAME VARIABLES K_1 = Test K_2 = Control.

DATE M 5 12 Y 2011.

*Test Forecast.
USE year 2011 month 5 THRU year 2016 month 4.

PREDICT THRU END.

TSMODEL
   /MODELSUMMARY  PRINT=[MODELFIT]
   /MODELSTATISTICS  DISPLAY=YES MODELFIT=[ SRSQUARE RSQUARE]
   /SERIESPLOT OBSERVED FORECAST FORECASTCI
   /OUTPUTFILTER DISPLAY=ALLMODELS
   /SAVE  PREDICTED(Predicted) LCL(LCL) UCL(UCL) NRESIDUAL(NResidual)
   /AUXILIARY  CILEVEL=90 MAXACFLAGS=24
   /MISSING USERMISSING=EXCLUDE
   /MODEL DEPENDENT=Test INDEPENDENT=YEAR_ MONTH_
      PREFIX='Model'
   /EXPERTMODELER TYPE=[ARIMA EXSMOOTH] TRYSEASONAL=YES
   /AUTOOUTLIER  DETECT=OFF.

*Control Forecast.
USE year 2011 month 5 THRU year 2016 month 4.

PREDICT THRU END.

TSMODEL
   /MODELSUMMARY  PRINT=[MODELFIT]
   /MODELSTATISTICS  DISPLAY=YES MODELFIT=[ SRSQUARE RSQUARE]
   /SERIESPLOT OBSERVED FORECAST FORECASTCI
   /OUTPUTFILTER DISPLAY=ALLMODELS
   /SAVE  PREDICTED(Predicted) LCL(LCL) UCL(UCL) NRESIDUAL(NResidual)
   /AUXILIARY  CILEVEL=90 MAXACFLAGS=24
   /MISSING USERMISSING=EXCLUDE
   /MODEL DEPENDENT=Control INDEPENDENT=YEAR_ MONTH_
      PREFIX='Model'
   /EXPERTMODELER TYPE=[ARIMA EXSMOOTH] TRYSEASONAL=YES
   /AUTOOUTLIER  DETECT=OFF.

DATASET CLOSE DS_TS.
DATASET CLOSE AGG_DS.

*Avg Daily Orders.
DATASET ACTIVATE TC_ACCTS.

DATASET DECLARE AGG_DT.

AGGREGATE
  /OUTFILE='AGG_DT'
  /BREAK=Group
  /ADT1=SUM(ADT1) 
  /ADT2=SUM(ADT2) 
  /ADT3=SUM(ADT3) 
  /ADT4=SUM(ADT4) 
  /ADT5=SUM(ADT5) 
  /ADT6=SUM(ADT6) 
  /ADT7=SUM(ADT7) 
  /ADT8=SUM(ADT8) 
  /ADT9=SUM(ADT9) 
  /ADT10=SUM(ADT10) 
  /ADT11=SUM(ADT11) 
  /ADT12=SUM(ADT12) 
  /ADT13=SUM(ADT13) 
  /ADT14=SUM(ADT14) 
  /ADT15=SUM(ADT15) 
  /ADT16=SUM(ADT16) 
  /ADT17=SUM(ADT17) 
  /ADT18=SUM(ADT18) 
  /ADT19=SUM(ADT19) 
  /ADT20=SUM(ADT20) 
  /ADT21=SUM(ADT21) 
  /ADT22=SUM(ADT22) 
  /ADT23=SUM(ADT23) 
  /ADT24=SUM(ADT24) 
  /ADT25=SUM(ADT25) 
  /ADT26=SUM(ADT26) 
  /ADT27=SUM(ADT27) 
  /ADT28=SUM(ADT28) 
  /ADT29=SUM(ADT29) 
  /ADT30=SUM(ADT30) 
  /ADT31=SUM(ADT31) 
  /ADT32=SUM(ADT32) 
  /ADT33=SUM(ADT33) 
  /ADT34=SUM(ADT34) 
  /ADT35=SUM(ADT35) 
  /ADT36=SUM(ADT36) 
  /ADT37=SUM(ADT37) 
  /ADT38=SUM(ADT38) 
  /ADT39=SUM(ADT39) 
  /ADT40=SUM(ADT40) 
  /ADT41=SUM(ADT41) 
  /ADT42=SUM(ADT42) 
  /ADT43=SUM(ADT43) 
  /ADT44=SUM(ADT44) 
  /ADT45=SUM(ADT45) 
  /ADT46=SUM(ADT46) 
  /ADT47=SUM(ADT47) 
  /ADT48=SUM(ADT48) 
  /ADT49=SUM(ADT49) 
  /ADT50=SUM(ADT50) 
  /ADT51=SUM(ADT51) 
  /ADT52=SUM(ADT52) 
  /ADT53=SUM(ADT53) 
  /ADT54=SUM(ADT54) 
  /ADT55=SUM(ADT55) 
  /ADT56=SUM(ADT56) 
  /ADT57=SUM(ADT57) 
  /ADT58=SUM(ADT58) 
  /ADT59=SUM(ADT59) 
  /ADT60=SUM(ADT60).

DATASET ACTIVATE AGG_DT.

COMPUTE ADT61 = 0.
COMPUTE ADT62 = 0.
COMPUTE ADT63 = 0.
COMPUTE ADT64 = 0.
COMPUTE ADT65 = 0.
COMPUTE ADT66 = 0.
COMPUTE ADT67 = 0.
COMPUTE ADT68 = 0.
COMPUTE ADT69 = 0.
COMPUTE ADT70 = 0.
COMPUTE ADT71 = 0.
COMPUTE ADT72 = 0.
EXE.

FLIP VARIABLES=ADT1 ADT2 ADT3 ADT4 ADT5 ADT6 ADT7 ADT8 ADT9 ADT10 ADT11 ADT12 ADT13 ADT14
                            ADT15 ADT16 ADT17 ADT18 ADT19 ADT20 ADT21 ADT22 ADT23 ADT24 ADT25 ADT26 ADT27 
                            ADT28 ADT29 ADT30 ADT31 ADT32 ADT33 ADT34 ADT35 ADT36 ADT37 ADT38 ADT39 ADT40 
                            ADT41 ADT42 ADT43 ADT44 ADT45 ADT46 ADT47 ADT48 ADT49 ADT50 ADT51 ADT52 ADT53 
                            ADT54 ADT55 ADT56 ADT57 ADT58 ADT59 ADT60 ADT61 ADT62 ADT63 ADT64 ADT65 ADT66 
                            ADT67 ADT68 ADT69 ADT70 ADT71 ADT72
  /NEWNAMES=Group.

DATASET NAME DT_TS.
DATASET ACTIVATE DT_TS.

RENAME VARIABLES K_1 = Test K_2 = Control.

DATE M 5 12 Y 2011.

*Test Forecast.
USE year 2011 month 5 THRU year 2016 month 4.

PREDICT THRU END.

TSMODEL
   /MODELSUMMARY  PRINT=[MODELFIT]
   /MODELSTATISTICS  DISPLAY=YES MODELFIT=[ SRSQUARE RSQUARE]
   /SERIESPLOT OBSERVED FORECAST FORECASTCI
   /OUTPUTFILTER DISPLAY=ALLMODELS
   /SAVE  PREDICTED(Predicted) LCL(LCL) UCL(UCL) NRESIDUAL(NResidual)
   /AUXILIARY  CILEVEL=90 MAXACFLAGS=24
   /MISSING USERMISSING=EXCLUDE
   /MODEL DEPENDENT=Test INDEPENDENT=YEAR_ MONTH_
      PREFIX='Model'
   /EXPERTMODELER TYPE=[ARIMA EXSMOOTH] TRYSEASONAL=YES
   /AUTOOUTLIER  DETECT=OFF.

*Control Forecast.
USE year 2011 month 5 THRU year 2016 month 4.

PREDICT THRU END.

TSMODEL
   /MODELSUMMARY  PRINT=[MODELFIT]
   /MODELSTATISTICS  DISPLAY=YES MODELFIT=[ SRSQUARE RSQUARE]
   /SERIESPLOT OBSERVED FORECAST FORECASTCI
   /OUTPUTFILTER DISPLAY=ALLMODELS
   /SAVE  PREDICTED(Predicted) LCL(LCL) UCL(UCL) NRESIDUAL(NResidual)
   /AUXILIARY  CILEVEL=90 MAXACFLAGS=24
   /MISSING USERMISSING=EXCLUDE
   /MODEL DEPENDENT=Control INDEPENDENT=YEAR_ MONTH_
      PREFIX='Model'
   /EXPERTMODELER TYPE=[ARIMA EXSMOOTH] TRYSEASONAL=YES
   /AUTOOUTLIER  DETECT=OFF.

DATASET CLOSE DT_TS.
DATASET CLOSE AGG_DT.

DATASET ACTIVATE TC_ACCTS.

MEANS account BY Group BY market_segment
   /CELLS COUNT.

/*LOOK AT THE TOTAL AND DAILY DISPLAY LAST TOUCH VISITS, REVENUE, AND ORDER TRENDS FOR THE TEST AND CONTROL MARKETS*/.

***GET THE DISPLAY METRICS***.
*Open the file containing the Display traffic to the Gcom web-site.




CACHE.
EXE.

DATASET NAME PPC2.
DATASET ACTIVATE PPC.

*Select only records where Paid Search is the last touch channel.
SELECT IF(LastTouchChannel = 'Paid Search').
EXE.

*Remove variables which do not have a valid zip code.
COMPUTE #CL = CHAR.LENGTH(ZipPostalCodes).
SELECT IF(#CL >= 5).
EXE.

*Change the date format.
STRING #MNTH(A10).
STRING YEAR(A4).

COMPUTE #SP = INDEX(Month,' ').
COMPUTE #MNTH = SUBSTR(Month,1,#SP).

COMPUTE #CL = CHAR.LENGTH(Month).
COMPUTE YEAR = SUBSTR(Month,#SP + 1,#CL).

STRING MM(A2).
COMPUTE MM = '00'.
IF(#MNTH = 'January')      MM = '01'.
IF(#MNTH = 'February')     MM = '02'.
IF(#MNTH = 'March')         MM = '03'.
IF(#MNTH = 'April')           MM = '04'.
IF(#MNTH = 'May')            MM = '05'.
IF(#MNTH = 'June')            MM = '06'.
IF(#MNTH = 'July')             MM = '07'.
IF(#MNTH = 'August')        MM = '08'.
IF(#MNTH = 'September')   MM = '09'.
IF(#MNTH = 'October')        MM = '10'.
IF(#MNTH = 'November')      MM = '11'.
IF(#MNTH = 'December')      MM = '12'.

STRING YM(A6).
COMPUTE YM = CONCAT(YEAR,MM).
EXE.

ALTER TYPE MM(F2.0) YEAR(F4.0) YM(F6.0).

DELETE VARIABLES Month LastTouchChannel PaidSearchisLastTouchChannel.

RENAME VARIABLES MM = MONTH ZIPPostalCodes = ZIPCODE PurchaseVisitsse43event43 = PurchaseVisits.

SORT CASES BY YM(A) ZIPCODE(A).

COMPUTE Unique = 1.
IF(YM = LAG(YM) AND ZIPCODE = LAG(ZIPCODE)) Unique = 0.
FORMATS Unique(F1.0).
EXE.

FREQ Unique.

*Aggregate the data by month and zipcode to remove duplicates.
DATASET DECLARE PPC2.

AGGREGATE
   /OUTFILE = 'PPC2'
   /BREAK = YM YEAR MONTH ZIPCODE
   /Visits = SUM(Visits)
   /UniqueVisitors = SUM(UniqueVisitors)
   /Revenue = SUM(Revenue)
   /Orders = SUM(Orders)
   /PurchaseVisits = SUM(PurchaseVisits).

DATASET CLOSE PPC.
DATASET ACTIVATE PPC2.
DATASET NAME PPC.

FORMATS Visits(F5.0) UniqueVisitors(F5.0) Orders(F5.0) PurchaseVisits(F5.0).

*Save the resulting SPSS file.
SAVE OUTFILE = '/usr/spss/userdata/Albrecht/PPC Geo/PPC Metrics by Month and Zip.sav'.

*Make the file so each monthly metric is a column.
DATASET COPY APR_PPC.
DATASET COPY MAY_PPC.
DATASET COPY JUN_PPC.
DATASET COPY JUL_PPC.
DATASET COPY AUG_PPC.
DATASET COPY SEP_PPC.
DATASET COPY OCT_PPC.
DATASET COPY NOV_PPC.
DATASET COPY DEC_PPC.
DATASET COPY JAN_PPC.
DATASET COPY FEB_PPC.

*APR 2015.
DATASET ACTIVATE APR_PPC.

SELECT IF(YM = 201504).
EXE.

RENAME VARIABLES Visits = Visits_201504 UniqueVisitors = UV_201504 Revenue = Revenue_201504 Orders = Orders_201504 PurchaseVisits = PV_201504.

DELETE VARIABLES YM TO MONTH.

*May 2015.
DATASET ACTIVATE MAY_PPC.

SELECT IF(YM = 201505).
EXE.

RENAME VARIABLES Visits = Visits_201505 UniqueVisitors = UV_201505 Revenue = Revenue_201505 Orders = Orders_201505 PurchaseVisits = PV_201505.

DELETE VARIABLES YM TO MONTH.

*June 2015.
DATASET ACTIVATE JUN_PPC.

SELECT IF(YM = 201506).
EXE.

RENAME VARIABLES Visits = Visits_201506 UniqueVisitors = UV_201506 Revenue = Revenue_201506 Orders = Orders_201506 PurchaseVisits = PV_201506.

DELETE VARIABLES YM TO MONTH.

*July 2015.
DATASET ACTIVATE JUL_PPC.

SELECT IF(YM = 201507).
EXE.

RENAME VARIABLES Visits = Visits_201507 UniqueVisitors = UV_201507 Revenue = Revenue_201507 Orders = Orders_201507 PurchaseVisits = PV_201507.

DELETE VARIABLES YM TO MONTH.

*Aug 2015.
DATASET ACTIVATE AUG_PPC.

SELECT IF(YM = 201508).
EXE.

RENAME VARIABLES Visits = Visits_201508 UniqueVisitors = UV_201508 Revenue = Revenue_201508 Orders = Orders_201508 PurchaseVisits = PV_201508.

DELETE VARIABLES YM TO MONTH.

*Sept 2015.
DATASET ACTIVATE SEP_PPC.

SELECT IF(YM = 201509).
EXE.

RENAME VARIABLES Visits = Visits_201509 UniqueVisitors = UV_201509 Revenue = Revenue_201509 Orders = Orders_201509 PurchaseVisits = PV_201509.

DELETE VARIABLES YM TO MONTH.

*Oct 2015.
DATASET ACTIVATE OCT_PPC.

SELECT IF(YM = 201510).
EXE.

RENAME VARIABLES Visits = Visits_201510 UniqueVisitors = UV_201510 Revenue = Revenue_201510 Orders = Orders_201510 PurchaseVisits = PV_201510.

DELETE VARIABLES YM TO MONTH.

*Nov 2015.
DATASET ACTIVATE NOV_PPC.

SELECT IF(YM = 201511).
EXE.

RENAME VARIABLES Visits = Visits_201511 UniqueVisitors = UV_201511 Revenue = Revenue_201511 Orders = Orders_201511 PurchaseVisits = PV_201511.

DELETE VARIABLES YM TO MONTH.

*Dec 2015.
DATASET ACTIVATE DEC_PPC.

SELECT IF(YM = 201512).
EXE.

RENAME VARIABLES Visits = Visits_201512 UniqueVisitors = UV_201512 Revenue = Revenue_201512 Orders = Orders_201512 PurchaseVisits = PV_201512.

DELETE VARIABLES YM TO MONTH.

*Jan 2016.
DATASET ACTIVATE JAN_PPC.

SELECT IF(YM = 201601).
EXE.

RENAME VARIABLES Visits = Visits_201601 UniqueVisitors = UV_201601 Revenue = Revenue_201601 Orders = Orders_201601 PurchaseVisits = PV_201601.

DELETE VARIABLES YM TO MONTH.

*Feb 2016.
DATASET ACTIVATE FEB_PPC.

SELECT IF(YM = 201602).
EXE.

RENAME VARIABLES Visits = Visits_201602 UniqueVisitors = UV_201602 Revenue = Revenue_201602 Orders = Orders_201602 PurchaseVisits = PV_201602.

DELETE VARIABLES YM TO MONTH.

*Get a unique list of zipcodes.
DATASET ACTIVATE PPC.

DATASET DECLARE PPC_ZIPS.

AGGREGATE
   /OUTFILE = 'PPC_ZIPS'
   /BREAK = ZIPCODE
   /Num_Cases = N.

DATASET ACTIVATE PPC_ZIPS.

DELETE VARIABLES Num_Cases.

MATCH FILES
   /FILE = *
   /TABLE = 'APR_PPC'
   /TABLE = 'MAY_PPC'
   /TABLE = 'JUN_PPC'
   /TABLE = 'JUL_PPC'
   /TABLE = 'AUG_PPC'
   /TABLE = 'SEP_PPC'
   /TABLE = 'OCT_PPC'
   /TABLE = 'NOV_PPC'
   /TABLE = 'DEC_PPC'
   /TABLE = 'JAN_PPC'
   /TABLE = 'FEB_PPC'
   /BY ZIPCODE.
EXE.

DATASET CLOSE APR_PPC.
DATASET CLOSE MAY_PPC.
DATASET CLOSE JUN_PPC.
DATASET CLOSE JUL_PPC.
DATASET CLOSE AUG_PPC.
DATASET CLOSE SEP_PPC.
DATASET CLOSE OCT_PPC.
DATASET CLOSE NOV_PPC.
DATASET CLOSE DEC_PPC.
DATASET CLOSE JAN_PPC.
DATASET CLOSE FEB_PPC.

DATASET ACTIVATE PPC_ZIPS.

***MANUALLY RE-ARRAGE ORDER OF THE VARIABLES TO PUT LIKE METRICS TOGETHER***.

DATASET ACTIVATE ZC.

MATCH FILES
   /FILE = *
   /TABLE = 'PPC_ZIPS'
   /BY ZIPCODE.
EXE.

*Replace missing values with 0.
VECTOR VLS = Visits_201504 TO PV_201602.

LOOP #l = 1 TO 55.

   IF(MISSING(VLS(#l))) VLS(#l) = 0.

END LOOP.
EXE.

*Calculate average daily figures for each metric.
VECTOR VS = Visits_201504 TO Visits_201602.
VECTOR UV = UV_201504 TO UV_201602.
VECTOR REV = Revenue_201504 TO Revenue_201602.
VECTOR ORD = Orders_201504 TO Orders_201602.
VECTOR PV = PV_201504 TO PV_201602.

VECTOR SD = K_201504 TO K_201602.

VECTOR ADV(11).
VECTOR ADUV(11).
VECTOR ADREV(11).
VECTOR ADORD(11).
VECTOR ADPV(11).

LOOP #m = 1 TO 11.

   DO IF(SD(#m) > 0).

      COMPUTE ADV(#m) = VS(#m) / SD(#m).

      COMPUTE ADUV(#m) = UV(#m) / SD(#m).

      COMPUTE ADREV(#m) = REV(#m) / SD(#m).

      COMPUTE ADORD(#m) = ORD(#m) / SD(#m).

      COMPUTE ADPV(#m) = PV(#m) / SD(#m).

   END IF.

END LOOP.
EXE.

DELETE VARIABLES K_201103 TO K_201602.

*Look at total PPC visits by month.
DATASET DECLARE PPC_TV.

AGGREGATE
  /OUTFILE='PPC_TV'
  /BREAK=Group3
  /Visits_201504=SUM(Visits_201504) 
  /Visits_201505=SUM(Visits_201505) 
  /Visits_201506=SUM(Visits_201506) 
  /Visits_201507=SUM(Visits_201507) 
  /Visits_201508=SUM(Visits_201508) 
  /Visits_201509=SUM(Visits_201509) 
  /Visits_201510=SUM(Visits_201510) 
  /Visits_201511=SUM(Visits_201511) 
  /Visits_201512=SUM(Visits_201512) 
  /Visits_201601=SUM(Visits_201601) 
  /Visits_201602=SUM(Visits_201602)
  /NUM_ZIPS=N.

DATASET ACTIVATE PPC_TV.

*Look at average daily PPC visits by month.
DATASET DECLARE PPC_DV.

AGGREGATE
  /OUTFILE='PPC_DV'
  /BREAK=Group3
  /ADV1=SUM(ADV1) 
  /ADV2=SUM(ADV2) 
  /ADV3=SUM(ADV3) 
  /ADV4=SUM(ADV4) 
  /ADV5=SUM(ADV5) 
  /ADV6=SUM(ADV6) 
  /ADV7=SUM(ADV7) 
  /ADV8=SUM(ADV8) 
  /ADV9=SUM(ADV9) 
  /ADV10=SUM(ADV10) 
  /ADV11=SUM(ADV11)
  /NUM_ZIPS=N.

DATASET ACTIVATE PPC_DV.

*Look at total PPC revenue by month.
DATASET ACTIVATE ZC.

DATASET DECLARE PPC_TRV.

AGGREGATE
  /OUTFILE='PPC_TRV'
  /BREAK=Group3
  /Revenue_201504=SUM(Revenue_201504) 
  /Revenue_201505=SUM(Revenue_201505) 
  /Revenue_201506=SUM(Revenue_201506) 
  /Revenue_201507=SUM(Revenue_201507) 
  /Revenue_201508=SUM(Revenue_201508) 
  /Revenue_201509=SUM(Revenue_201509) 
  /Revenue_201510=SUM(Revenue_201510) 
  /Revenue_201511=SUM(Revenue_201511) 
  /Revenue_201512=SUM(Revenue_201512) 
  /Revenue_201601=SUM(Revenue_201601) 
  /Revenue_201602=SUM(Revenue_201602)
  /NUM_ZIPS=N.

DATASET ACTIVATE PPC_TRV.
